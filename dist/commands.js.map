{"version":3,"file":"commands.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AAEAA,MAAM,CAACC,OAAP,CAAe,YAAM,CACnB;AACD,CAFD;AAIA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAMC,OAAO,GAAG;AACdC,QAAI,EAAEL,MAAM,CAACM,YAAP,CAAoBC,2BAApB,CAAgDC,oBADxC;AAEdJ,WAAO,EAAE,mBAFK;AAGdK,QAAI,EAAE,YAHQ;AAIdC,cAAU,EAAE;AAJE,GAAhB,CADqB,CAQrB;;AACAV,QAAM,CAACW,OAAP,CAAeC,OAAf,CAAuBC,IAAvB,CAA4BC,oBAA5B,CAAiDC,YAAjD,CAA8D,QAA9D,EAAwEX,OAAxE,EATqB,CAWrB;;AACAD,OAAK,CAACa,SAAN;AACD;;AAED,SAASC,SAAT,GAAqB;AACnB,SAAO,OAAOC,IAAP,KAAgB,WAAhB,GACHA,IADG,GAEH,OAAOC,MAAP,KAAkB,WAAlB,GACAA,MADA,GAEA,OAAOC,qBAAP,KAAkB,WAAlB,GACAA,qBADA,GAEAC,SANJ;AAOD;;AAED,IAAMC,CAAC,GAAGL,SAAS,EAAnB,EAEA;;AACAK,CAAC,CAACpB,MAAF,GAAWA,MAAX;;;;;;;UC3CA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;UEPD;UACA;UACA;UACA;UACA","sources":["webpack:///./src/commands/commands.js?","webpack:///webpack/bootstrap?","webpack:///webpack/runtime/global?","webpack:///webpack/before-startup?","webpack:///webpack/startup?","webpack:///webpack/after-startup?"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n","// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/commands/commands.js\"](0, __webpack_exports__, __webpack_require__);\n",""],"names":["Office","onReady","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","getGlobal","self","window","global","undefined","g"],"sourceRoot":""}